{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/valentinbootz/Documents/Master/Deloitte Project Study/touchpoint-next/components/ProfileForm.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport validate from './validate';\nimport TextInput from './TextInput';\n\nclass ProfileForm extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      formIsValid: false,\n      formControls: {\n        name: {\n          value: '',\n          placeholder: 'Customer name',\n          valid: false,\n          validationRules: {\n            minLength: 4,\n            isRequired: true\n          },\n          touched: false\n        },\n        address: {\n          value: '',\n          placeholder: 'Customer address',\n          valid: false,\n          validationRules: {\n            minLength: 4,\n            isRequired: true\n          },\n          touched: false\n        },\n        email: {\n          value: '',\n          placeholder: 'Customer email',\n          valid: false,\n          validationRules: {\n            isRequired: true,\n            isEmail: true\n          },\n          touched: false\n        }\n      }\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    const name = event.target.name;\n    const value = event.target.value;\n\n    const updatedControls = _objectSpread({}, this.state.formControls);\n\n    const updatedFormElement = _objectSpread({}, updatedControls[name]);\n\n    updatedFormElement.value = value;\n    updatedFormElement.touched = true;\n    updatedFormElement.valid = validate(value, updatedFormElement.validationRules);\n    updatedControls[name] = updatedFormElement;\n    let formIsValid = true;\n\n    for (let inputIdentifier in updatedControls) {\n      formIsValid = updatedControls[inputIdentifier].valid && formIsValid;\n    }\n\n    this.setState({\n      formControls: updatedControls,\n      formIsValid: formIsValid\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n  }\n\n  render() {\n    return __jsx(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, __jsx(TextInput, {\n      name: \"name\",\n      placeholder: this.state.formControls.name.placeholder,\n      value: this.state.formControls.name.value,\n      onChange: this.handleChange,\n      touched: this.state.formControls.name.touched,\n      valid: this.state.formControls.name.valid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), __jsx(TextArea, {\n      name: \"address\",\n      value: this.state.formControls.address.value,\n      placeholder: this.state.formControls.address.placeholder,\n      onChange: this.handleChange,\n      touched: this.state.formControls.address.touched,\n      valid: this.state.formControls.address.valid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), __jsx(Email, {\n      type: \"email\",\n      name: \"email\",\n      value: this.state.formControls.email.value,\n      placeholder: this.state.formControls.email.placeholder,\n      onChange: this.handleChange,\n      touched: this.state.formControls.email.touched,\n      valid: this.state.formControls.email.valid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), __jsx(\"button\", {\n      onClick: this.formSubmitHandler,\n      disabled: !this.state.formControls.name.valid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n}\n\nexport default ProfileForm;","map":{"version":3,"sources":["/Users/valentinbootz/Documents/Master/Deloitte Project Study/touchpoint-next/components/ProfileForm.js"],"names":["validate","TextInput","ProfileForm","React","Component","constructor","state","formIsValid","formControls","name","value","placeholder","valid","validationRules","minLength","isRequired","touched","address","email","isEmail","handleChange","bind","handleSubmit","event","target","updatedControls","updatedFormElement","inputIdentifier","setState","preventDefault","render","formSubmitHandler"],"mappings":"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","sourcesContent":["import validate from './validate'\nimport TextInput from './TextInput'\n\nclass ProfileForm extends React.Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tformIsValid: false,\n\t\t\tformControls: {\n\t\t\t\tname: {\n\t\t\t\t\tvalue: '',\n\t\t\t\t\tplaceholder: 'Customer name',\n\t\t\t\t\tvalid: false,\n\t\t\t\t\tvalidationRules: {\n\t\t\t\t\t\tminLength: 4,\n\t\t\t\t\t\tisRequired: true\n\t\t\t\t\t},\n\t\t\t\t\ttouched: false\n\t\t\t\t},\n\t\t\t\taddress: {\n\t\t\t\t\tvalue: '',\n\t\t\t\t\tplaceholder: 'Customer address',\n\t\t\t\t\tvalid: false,\n\t\t\t\t\tvalidationRules: {\n\t\t\t\t\t\tminLength: 4,\n\t\t\t\t\t\tisRequired: true\n\t\t\t\t\t},\n\t\t\t\t\ttouched: false\n\t\t\t\t},\n\t\t\t\temail: {\n\t\t\t\t\tvalue: '',\n\t\t\t\t\tplaceholder: 'Customer email',\n\t\t\t\t\tvalid: false,\n\t\t\t\t\tvalidationRules: {\n\t\t\t\t\t\tisRequired: true,\n\t\t\t\t\t\tisEmail: true\n\t\t\t\t\t},\n\t\t\t\t\ttouched: false\n\t\t\t\t}\n\n\t\t\t}\n\t\t};\n\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\n\thandleChange(event) {\n\t\tconst name = event.target.name;\n\t\tconst value = event.target.value;\n\n\t\tconst updatedControls = {\n\t\t\t...this.state.formControls\n\t\t};\n\t\tconst updatedFormElement = {\n\t\t\t...updatedControls[name]\n\t\t};\n\t\tupdatedFormElement.value = value;\n\t\tupdatedFormElement.touched = true;\n\t\tupdatedFormElement.valid = validate(value, updatedFormElement.validationRules);\n\n\t\tupdatedControls[name] = updatedFormElement;\n\n\t\tlet formIsValid = true;\n\t\tfor (let inputIdentifier in updatedControls) {\n\t\t\tformIsValid = updatedControls[inputIdentifier].valid && formIsValid;\n\t\t}\n\n\t\tthis.setState({\n\t\t\tformControls: updatedControls,\n\t\t\tformIsValid: formIsValid\n\t\t});\n\t}\n\n\thandleSubmit(event) {\n\t\tevent.preventDefault();\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<form onSubmit={this.handleSubmit}>\n\n\t\t\t\t<TextInput name='name'\n\t\t\t\t\tplaceholder={this.state.formControls.name.placeholder}\n\t\t\t\t\tvalue={this.state.formControls.name.value}\n\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\ttouched={this.state.formControls.name.touched}\n\t\t\t\t\tvalid={this.state.formControls.name.valid}\n\t\t\t\t/>\n\n\t\t\t\t<TextArea name='address'\n\t\t\t\t\tvalue={this.state.formControls.address.value}\n\t\t\t\t\tplaceholder={this.state.formControls.address.placeholder}\n\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\ttouched={this.state.formControls.address.touched}\n\t\t\t\t\tvalid={this.state.formControls.address.valid}\n\t\t\t\t/>\n\n\t\t\t\t<Email type='email'\n\t\t\t\t\tname='email'\n\t\t\t\t\tvalue={this.state.formControls.email.value}\n\t\t\t\t\tplaceholder={this.state.formControls.email.placeholder}\n\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\ttouched={this.state.formControls.email.touched}\n\t\t\t\t\tvalid={this.state.formControls.email.valid}\n\t\t\t\t/>\n\n\t\t\t\t<button onClick={this.formSubmitHandler} disabled={!this.state.formControls.name.valid} >\n\t\t\t\t\tSubmit\n\t\t\t\t</button>\n\n\t\t\t</form>\n\t\t);\n\t}\n}\n\nexport default ProfileForm;"]},"metadata":{},"sourceType":"module"}